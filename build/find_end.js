// Generated by CoffeeScript 1.7.1

/* find_end.coffee */

(function() {
  var find_end, parenthesis_iter;

  parenthesis_iter = function(str, level, index) {

    /* Finds the first instance of "(" or ")", whichever comes first, and returns
        a list of the form [L[0] \pm 1, index], where we take + 1 for a left paren-
        thesis and -1 for a right parenthesis.
     */
    var i, j, _ref;
    str = str.substring(index);
    _ref = [str.indexOf("("), str.indexOf(")")], i = _ref[0], j = _ref[1];
    if (i < j && i !== -1) {
      return [level + 1, index + i];
    } else {
      return [level - 1, index + j];
    }
  };

  find_end = function(str) {

    /* The first character of str should be a left parenthesis '('.  This
        function will return the index of the closing parenthesis.
     */
    var index, level, src, _ref, _ref1;
    src = util.strip_between(util.strip_between(str, "\"", "\""), "'", "'");
    _ref = [1, 0], level = _ref[0], index = _ref[1];
    while (level !== 0) {
      _ref1 = parenthesis_iter(str, level, index + 1), level = _ref1[0], index = _ref1[1];
    }
    return index;
  };

  window.find_end = find_end;

}).call(this);
