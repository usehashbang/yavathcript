// Generated by CoffeeScript 1.7.1

/* utility.coffee */

(function() {
  var clean_up, replace_all, strip_between, strip_leading_whitespace, strip_outer_parentheses, strip_outer_whitespace, strip_trailing_whitespace, trim_whitespace;

  strip_between = function(str, L, R) {

    /* Removes anything in str contained between an L and an R. */
    var i, j;
    i = str.indexOf(L);
    j = (str.substring(i + 1)).indexOf(R);
    if (i === -1 || j === -1) {
      return str;
    } else {
      return strip_between(str.substring(0, i) + str.substring(i + j + 2), L, R);
    }
  };

  strip_outer_parentheses = function(str) {

    /* Your classes "(asdf)" to "asdf" function. Works like a charm. */
    if (str.substring(0, 1) === "(") {
      return str.substring(1, str.length - 1);
    } else {
      return str;
    }
  };

  strip_trailing_whitespace = function(str) {

    /* Takes away trailing instances of space, \t, \n. */
    switch (str.substr(str.length - 1, 1)) {
      case "\n":
      case "\t":
      case " ":
        return strip_trailing_whitespace(str.substring(0, str.length - 1));
      default:
        return str;
    }
  };

  strip_leading_whitespace = function(str) {

    /* Takes away leading instances of space, \t and \n. */
    switch (str.substring(0, 1)) {
      case "\n":
      case "\t":
      case " ":
        return strip_leading_whitespace(str.substring(1));
      default:
        return str;
    }
  };

  strip_outer_whitespace = function(str) {

    /* Removes whitespace from before and after string 'str'. */
    return strip_trailing_whitespace(strip_leading_whitespace(str));
  };

  replace_all = function(str, from, to) {

    /* Replaces all instances of 'from' with 'to'. */
    while (str.indexOf(from) !== -1) {
      str = str.replace(from, to);
    }
    return str;
  };

  trim_whitespace = function(str) {

    /* E.g. "\t\t \t\nasdf  asdf     " \mapsto " asdf asdf ". */
    return replace_all(replace_all(replace_all(str, "\n", " "), "\t", " "), "  ", " ");
  };

  clean_up = function(str) {

    /* Removes outer parentheses, outer whitespace, and trims inner whitespace. */
    return util.strip_outer_whitespace(util.trim_whitespace(util.strip_outer_parentheses(str)));
  };

  window.util = {
    strip_between: strip_between,
    strip_outer_parentheses: strip_outer_parentheses,
    strip_outer_parentheses: strip_outer_parentheses,
    strip_trailing_whitespace: strip_trailing_whitespace,
    strip_leading_whitespace: strip_leading_whitespace,
    strip_outer_whitespace: strip_outer_whitespace,
    replace_all: replace_all,
    trim_whitespace: trim_whitespace,
    clean_up: clean_up
  };

}).call(this);
